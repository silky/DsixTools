(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* Options *)
InitializeOptions:=Block[{},
(* Default values *)
CPV=0;
ReadRGEs=1;
RGEsMethod=1;
ExportRGEs=0;
UseRGEsSM=1;
exportSMEFTrunner=0;
exportEWmatcher=0;
exportWETrunner=0;
inputWCsType=1;
];


(* SM parameters *)
InitializeSM:=Block[{},
GAUGE[1]=0;
GAUGE[2]=0;
GAUGE[3]=0;
SCALAR[1]=0;
SCALAR[2]=0;
ReYukU=rs0;
ImYukU=rs0;
ReYukD=rs0;
ImYukD=rs0;
ReYukE=rs0;
ImYukE=rs0;
THETA[1]=0;
THETA[2]=0;
THETA[3]=0;
];


(* WCs *)
InitializeWCs:=Block[{},
(* SMEFT *)
Do[WC[1,i]=0;,{i,1,4}]; (* X^3 *)
Do[WC[2,i]=0;,{i,1,1}]; (* \[CurlyPhi]^6 *)
Do[WC[3,i]=0;,{i,1,2}]; (* \[CurlyPhi]^4D^2 *)
Do[WC[4,i]=0;,{i,1,8}]; (* X^2\[CurlyPhi]^2 *)
Do[ReWC[5,i]=rs0;ImWC[5,i]=rs0;,{i,1,3}];  (* \[Psi]^2\[CurlyPhi]^3 *)
Do[ReWC[6,i]=rs0;ImWC[6,i]=rs0;,{i,1,8}]; (* \[Psi]^2X \[CurlyPhi] *)
Do[ReWC[7,i]=rs0;ImWC[7,i]=rs0;,{i,1,8}]; (* \[Psi]^2\[CurlyPhi]^2D *)
Do[ReWC[8,i]=rspt0;ImWC[8,i]=rspt0;,{i,1,5}]; (* LL LL *)
Do[ReWC[9,i]=rspt0;ImWC[9,i]=rspt0;,{i,1,7}]; (* RR RR *)
Do[ReWC[10,i]=rspt0;ImWC[10,i]=rspt0;,{i,1,8}]; (* LL RR *)
ReWC[11,1]=rspt0;ImWC[11,1]=rspt0; (* LR RL *)
Do[ReWC[12,i]=rspt0;ImWC[12,i]=rspt0;,{i,1,4}]; (* LR LR *)
Do[ReWC[13,i]=rspt0;ImWC[13,i]=rspt0;,{i,1,4}]; (* B-violating *)
ReWC[14,1]=rs0;ImWC[14,1]=rs0; (* dim-5 *)
(* WET *)
Do[ReWCWET[1,i]=0;ImWCWET[1,i]=0;,{i,1,8}]; (* BS2 *)
Do[ReWCWET[2,i]=0;ImWCWET[2,i]=0;,{i,1,15}]; (* BC1 *)
Do[ReWCWET[3,i]=0;ImWCWET[3,i]=0;,{i,1,80}]; (* BS1H *)
Do[ReWCWET[4,i]=0;ImWCWET[4,i]=0;,{i,1,4}]; (* BS1GB *)
Do[ReWCWET[5,i]=0;ImWCWET[5,i]=0;,{i,1,30}]; (* BS1SL *)
(* All WCs not present in the input file will be assumed to vanish *)
];


(* Global initialization *)
InitializeInput:=Block[{},

InitializeOptions;
InitializeSM;
InitializeWCs;

];


(* OPTIONS *)


ReadScales[i_]:=Block[{},

HIGHSCALE=inputOptions[[i+1,2]];
tHIGH=Log[10,HIGHSCALE];

LOWSCALE=inputOptions[[i+2,2]];
tLOW=Log[10,LOWSCALE];

];
ReadOptions[i_]:=Block[{k},
k=1;
While[i+k<=Length[inputOptions]&&inputOptions[[i+k,1]]!="Block"&&inputOptions[[i+k,1]]!="BLOCK",
If[inputOptions[[i+k,1]]==1,CPV=inputOptions[[i+k,2]]];
If[inputOptions[[i+k,1]]==2,ReadRGEs=inputOptions[[i+k,2]]];
If[inputOptions[[i+k,1]]==3,RGEsMethod=inputOptions[[i+k,2]]];
If[inputOptions[[i+k,1]]==4,ExportRGEs=inputOptions[[i+k,2]]];
If[inputOptions[[i+k,1]]==5,UseRGEsSM=inputOptions[[i+k,2]]];
If[inputOptions[[i+k,1]]==6,exportSMEFTrunner=inputOptions[[i+k,2]]];
If[inputOptions[[i+k,1]]==7,exportEWmatcher=inputOptions[[i+k,2]]];
If[inputOptions[[i+k,1]]==8,exportWETrunner=inputOptions[[i+k,2]]];
If[inputOptions[[i+k,1]]==9,inputWCsType=inputOptions[[i+k,2]]];
k++;
];
];


ReadOptionsFile:=Block[{},
Do[
line=inputOptions[[i]];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="SCALES",ReadScales[i];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="OPTIONS",ReadOptions[i];];
,{i,1,Length[inputOptions]}];
];


(* SM INPUT *)


ReadGauge[i_]:=Block[{k},
k=1;
While[i+k<=Length[inputSM]&&inputSM[[i+k,1]]!="Block"&&inputSM[[i+k,1]]!="BLOCK",
If[inputSM[[i+k,1]]==1,GAUGE[1]=inputSM[[i+k,2]]];
If[inputSM[[i+k,1]]==2,GAUGE[2]=inputSM[[i+k,2]]];
If[inputSM[[i+k,1]]==3,GAUGE[3]=inputSM[[i+k,2]]];
k++;
];
];
ReadScalar[i_]:=Block[{k},
k=1;
While[i+k<=Length[inputSM]&&inputSM[[i+k,1]]!="Block"&&inputSM[[i+k,1]]!="BLOCK",
If[inputSM[[i+k,1]]==1,SCALAR[1]=inputSM[[i+k,2]]];
If[inputSM[[i+k,1]]==2,SCALAR[2]=inputSM[[i+k,2]]];
k++;
];
];
ReadYukawa[i_]:=Block[{k,yukawa},
yukawa=Table[0,{m,1,3},{n,1,3}];
k=1;
While[i+k<=Length[inputSM]&&inputSM[[i+k,1]]!="Block"&&inputSM[[i+k,1]]!="BLOCK",
Do[If[inputSM[[i+k,1]]==r&&inputSM[[i+k,2]]==s,yukawa[[r,s]]=inputSM[[i+k,3]]];,{r,1,3},{s,1,3}];
k++;
];
Return[yukawa];
];
ReadTheta[i_]:=Block[{k},
k=1;
While[i+k<=Length[inputSM]&&inputSM[[i+k,1]]!="Block"&&inputSM[[i+k,1]]!="BLOCK",
If[inputSM[[i+k,1]]==1,THETA[1]=inputSM[[i+k,2]]];
If[inputSM[[i+k,1]]==2,THETA[2]=inputSM[[i+k,2]]];
If[inputSM[[i+k,1]]==3,THETA[3]=inputSM[[i+k,2]]];
k++;
];
];


ReadSMFile:=Block[{},
Do[
line=inputSM[[i]];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="GAUGE",ReadGauge[i];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="SCALAR",ReadScalar[i];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="GU",ReYukU=ReadYukawa[i];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMGU",ImYukU=ReadYukawa[i];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="GD",ReYukD=ReadYukawa[i];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMGD",ImYukD=ReadYukawa[i];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="GE",ReYukE=ReadYukawa[i];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMGE",ImYukE=ReadYukawa[i];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="THETA",ReadTheta[i];];
,{i,1,Length[inputSM]}];
];


(* WILSON COEFFICIENTS INPUT *)


ReadWC0F[cat_,i_]:=Block[{k},
nOp[1]=4;
nOp[2]=1;
nOp[3]=2;
nOp[4]=8;
k=1;
While[i+k<=Length[inputWCs]&&inputWCs[[i+k,1]]!="Block"&&inputWCs[[i+k,1]]!="BLOCK",
Do[If[inputWCs[[i+k,1]]==r,WC[cat,r]=inputWCs[[i+k,2]]];,{r,1,nOp[cat]}];
k++;
];
];

ReadWC2F[i_,cat_,ReIm_]:=Block[{k,WC2F},
WC2F=Table[0,{m,1,3},{n,1,3}];
k=1;
While[i+k<=Length[inputWCs]&&inputWCs[[i+k,1]]!="Block"&&inputWCs[[i+k,1]]!="BLOCK",
Do[If[inputWCs[[i+k,1]]==r&&inputWCs[[i+k,2]]==s,WC2F[[r,s]]=inputWCs[[i+k,3]]];,{r,1,3},{s,1,3}];
k++;
];
If[cat==2,(* hermitian 3x3 matrix *)
If[ReIm==0, (* Real part *)
WC2F[[2,1]]=WC2F[[1,2]];
WC2F[[3,1]]=WC2F[[1,3]];
WC2F[[3,2]]=WC2F[[2,3]];
,(* Imaginary part *)
WC2F[[1,1]]=0;
WC2F[[2,1]]= -WC2F[[1,2]];
WC2F[[2,2]]=0;
WC2F[[3,1]]=-WC2F[[1,3]];
WC2F[[3,2]]=-WC2F[[2,3]];
WC2F[[3,3]]=0;
];
];
If[cat==3,(* symmetric 3x3 matrix *)
WC2F[[2,1]]=WC2F[[1,2]];
WC2F[[3,1]]=WC2F[[1,3]];
WC2F[[3,2]]=WC2F[[2,3]];
];
Return[WC2F];
];

ReadWC4F[i_,cat_,ReIm_]:=Block[{k,WC4F},
WC4F=Table[0,{p,1,3},{r,1,3},{s,1,3},{t,1,3}];
k=1;
While[i+k<=Length[inputWCs]&&inputWCs[[i+k,1]]!="Block"&&inputWCs[[i+k,1]]!="BLOCK",
Do[If[inputWCs[[i+k,1]]==p&&inputWCs[[i+k,2]]==r&&inputWCs[[i+k,3]]==s&&inputWCs[[i+k,4]]==t,WC4F[[p,r,s,t]]=inputWCs[[i+k,5]]];,{p,1,3},{r,1,3},{s,1,3},{t,1,3}];
k++;
];
If[cat==4,(* two identical XX currents (class 8 A-B) *)
If[ReIm==0, (* Real part *)
WC4F[[1,1,2,1]]=WC4F[[1,1,1,2]];
WC4F[[1,1,3,1]]=WC4F[[1,1,1,3]];
WC4F[[1,1,3,2]]=WC4F[[1,1,2,3]];
WC4F[[1,2,1,1]]=WC4F[[1,1,1,2]];
WC4F[[1,3,1,1]]=WC4F[[1,1,1,3]];
WC4F[[1,3,1,2]]=WC4F[[1,2,1,3]];
WC4F[[1,3,2,1]]=WC4F[[1,2,3,1]];
WC4F[[2,1,1,1]]=WC4F[[1,1,1,2]];
WC4F[[2,1,1,2]]=WC4F[[1,2,2,1]];
WC4F[[2,1,1,3]]=WC4F[[1,2,3,1]];
WC4F[[2,1,2,1]]=WC4F[[1,2,1,2]];
WC4F[[2,1,2,2]]=WC4F[[1,2,2,2]];
WC4F[[2,1,2,3]]=WC4F[[1,2,3,2]];
WC4F[[2,1,3,1]]=WC4F[[1,2,1,3]];
WC4F[[2,1,3,2]]=WC4F[[1,2,2,3]];
WC4F[[2,1,3,3]]=WC4F[[1,2,3,3]];
WC4F[[2,2,1,1]]=WC4F[[1,1,2,2]];
WC4F[[2,2,1,2]]=WC4F[[1,2,2,2]];
WC4F[[2,2,1,3]]=WC4F[[1,3,2,2]];
WC4F[[2,2,2,1]]=WC4F[[1,2,2,2]];
WC4F[[2,2,3,1]]=WC4F[[1,3,2,2]];
WC4F[[2,2,3,2]]=WC4F[[2,2,2,3]];
WC4F[[2,3,1,1]]=WC4F[[1,1,2,3]];
WC4F[[2,3,1,2]]=WC4F[[1,2,2,3]];
WC4F[[2,3,1,3]]=WC4F[[1,3,2,3]];
WC4F[[2,3,2,1]]=WC4F[[1,2,3,2]];
WC4F[[2,3,2,2]]=WC4F[[2,2,2,3]];
WC4F[[2,3,3,1]]=WC4F[[1,3,3,2]];
WC4F[[3,1,1,1]]=WC4F[[1,1,1,3]];
WC4F[[3,1,1,2]]=WC4F[[1,2,3,1]];
WC4F[[3,1,1,3]]=WC4F[[1,3,3,1]];
WC4F[[3,1,2,1]]=WC4F[[1,2,1,3]];
WC4F[[3,1,2,2]]=WC4F[[1,3,2,2]];
WC4F[[3,1,2,3]]=WC4F[[1,3,3,2]];
WC4F[[3,1,3,1]]=WC4F[[1,3,1,3]];
WC4F[[3,1,3,2]]=WC4F[[1,3,2,3]];
WC4F[[3,1,3,3]]=WC4F[[1,3,3,3]];
WC4F[[3,2,1,1]]=WC4F[[1,1,2,3]];
WC4F[[3,2,1,2]]=WC4F[[1,2,3,2]];
WC4F[[3,2,1,3]]=WC4F[[1,3,3,2]];
WC4F[[3,2,2,1]]=WC4F[[1,2,2,3]];
WC4F[[3,2,2,2]]=WC4F[[2,2,2,3]];
WC4F[[3,2,2,3]]=WC4F[[2,3,3,2]];
WC4F[[3,2,3,1]]=WC4F[[1,3,2,3]];
WC4F[[3,2,3,2]]=WC4F[[2,3,2,3]];
WC4F[[3,2,3,3]]=WC4F[[2,3,3,3]];
WC4F[[3,3,1,1]]=WC4F[[1,1,3,3]];
WC4F[[3,3,1,2]]=WC4F[[1,2,3,3]];
WC4F[[3,3,1,3]]=WC4F[[1,3,3,3]];
WC4F[[3,3,2,1]]=WC4F[[1,2,3,3]];
WC4F[[3,3,2,2]]=WC4F[[2,2,3,3]];
WC4F[[3,3,2,3]]=WC4F[[2,3,3,3]];
WC4F[[3,3,3,1]]=WC4F[[1,3,3,3]];
WC4F[[3,3,3,2]]=WC4F[[2,3,3,3]];
,(* Imaginary part *)
WC4F[[1,1,1,1]]=0;
WC4F[[1,1,2,1]]=-WC4F[[1,1,1,2]];
WC4F[[1,1,2,2]]=0;
WC4F[[1,1,3,1]]=-WC4F[[1,1,1,3]];
WC4F[[1,1,3,2]]=-WC4F[[1,1,2,3]];
WC4F[[1,1,3,3]]=0;
WC4F[[1,2,1,1]]=WC4F[[1,1,1,2]];
WC4F[[1,2,2,1]]=0;
WC4F[[1,3,1,1]]=WC4F[[1,1,1,3]];
WC4F[[1,3,1,2]]=WC4F[[1,2,1,3]];
WC4F[[1,3,2,1]]=-WC4F[[1,2,3,1]];
WC4F[[1,3,3,1]]=0;
WC4F[[2,1,1,1]]=-WC4F[[1,1,1,2]];
WC4F[[2,1,1,2]]=0;
WC4F[[2,1,1,3]]=-WC4F[[1,2,3,1]];
WC4F[[2,1,2,1]]=-WC4F[[1,2,1,2]];
WC4F[[2,1,2,2]]=-WC4F[[1,2,2,2]];
WC4F[[2,1,2,3]]=-WC4F[[1,2,3,2]];
WC4F[[2,1,3,1]]=-WC4F[[1,2,1,3]];
WC4F[[2,1,3,2]]=-WC4F[[1,2,2,3]];
WC4F[[2,1,3,3]]=-WC4F[[1,2,3,3]];
WC4F[[2,2,1,1]]=0;
WC4F[[2,2,1,2]]=WC4F[[1,2,2,2]];
WC4F[[2,2,1,3]]=WC4F[[1,3,2,2]];
WC4F[[2,2,2,1]]=-WC4F[[1,2,2,2]];
WC4F[[2,2,2,2]]=0;
WC4F[[2,2,3,1]]=-WC4F[[1,3,2,2]];
WC4F[[2,2,3,2]]=-WC4F[[2,2,2,3]];
WC4F[[2,2,3,3]]=0;
WC4F[[2,3,1,1]]=WC4F[[1,1,2,3]];
WC4F[[2,3,1,2]]=WC4F[[1,2,2,3]];
WC4F[[2,3,1,3]]=WC4F[[1,3,2,3]];
WC4F[[2,3,2,1]]=-WC4F[[1,2,3,2]];
WC4F[[2,3,2,2]]=WC4F[[2,2,2,3]];
WC4F[[2,3,3,1]]=-WC4F[[1,3,3,2]];
WC4F[[2,3,3,2]]=0;
WC4F[[3,1,1,1]]=-WC4F[[1,1,1,3]];
WC4F[[3,1,1,2]]=WC4F[[1,2,3,1]];
WC4F[[3,1,1,3]]=0;
WC4F[[3,1,2,1]]=-WC4F[[1,2,1,3]];
WC4F[[3,1,2,2]]=-WC4F[[1,3,2,2]];
WC4F[[3,1,2,3]]=-WC4F[[1,3,3,2]];
WC4F[[3,1,3,1]]=-WC4F[[1,3,1,3]];
WC4F[[3,1,3,2]]=-WC4F[[1,3,2,3]];
WC4F[[3,1,3,3]]=-WC4F[[1,3,3,3]];
WC4F[[3,2,1,1]]=-WC4F[[1,1,2,3]];
WC4F[[3,2,1,2]]=WC4F[[1,2,3,2]];
WC4F[[3,2,1,3]]=WC4F[[1,3,3,2]];
WC4F[[3,2,2,1]]=-WC4F[[1,2,2,3]];
WC4F[[3,2,2,2]]=-WC4F[[2,2,2,3]];
WC4F[[3,2,2,3]]=0;
WC4F[[3,2,3,1]]=-WC4F[[1,3,2,3]];
WC4F[[3,2,3,2]]=-WC4F[[2,3,2,3]];
WC4F[[3,2,3,3]]=-WC4F[[2,3,3,3]];
WC4F[[3,3,1,1]]=0;
WC4F[[3,3,1,2]]=WC4F[[1,2,3,3]];
WC4F[[3,3,1,3]]=WC4F[[1,3,3,3]];
WC4F[[3,3,2,1]]=-WC4F[[1,2,3,3]];
WC4F[[3,3,2,2]]=0;
WC4F[[3,3,2,3]]=WC4F[[2,3,3,3]];
WC4F[[3,3,3,1]]=-WC4F[[1,3,3,3]];
WC4F[[3,3,3,2]]=-WC4F[[2,3,3,3]];
WC4F[[3,3,3,3]]=0;
];
];
If[cat==5,(* two independent XX currents (class 8 C-D) *)
If[ReIm==0, (* Real part *)
WC4F[[1,1,2,1]]=WC4F[[1,1,1,2]];
WC4F[[1,1,3,1]]=WC4F[[1,1,1,3]];
WC4F[[1,1,3,2]]=WC4F[[1,1,2,3]];
WC4F[[2,1,1,1]]=WC4F[[1,2,1,1]];
WC4F[[2,1,1,2]]=WC4F[[1,2,2,1]];
WC4F[[2,1,1,3]]=WC4F[[1,2,3,1]];
WC4F[[2,1,2,1]]=WC4F[[1,2,1,2]];
WC4F[[2,1,2,2]]=WC4F[[1,2,2,2]];
WC4F[[2,1,2,3]]=WC4F[[1,2,3,2]];
WC4F[[2,1,3,1]]=WC4F[[1,2,1,3]];
WC4F[[2,1,3,2]]=WC4F[[1,2,2,3]];
WC4F[[2,1,3,3]]=WC4F[[1,2,3,3]];
WC4F[[2,2,2,1]]=WC4F[[2,2,1,2]];
WC4F[[2,2,3,1]]=WC4F[[2,2,1,3]];
WC4F[[2,2,3,2]]=WC4F[[2,2,2,3]];
WC4F[[3,1,1,1]]=WC4F[[1,3,1,1]];
WC4F[[3,1,1,2]]=WC4F[[1,3,2,1]];
WC4F[[3,1,1,3]]=WC4F[[1,3,3,1]];
WC4F[[3,1,2,1]]=WC4F[[1,3,1,2]];
WC4F[[3,1,2,2]]=WC4F[[1,3,2,2]];
WC4F[[3,1,2,3]]=WC4F[[1,3,3,2]];
WC4F[[3,1,3,1]]=WC4F[[1,3,1,3]];
WC4F[[3,1,3,2]]=WC4F[[1,3,2,3]];
WC4F[[3,1,3,3]]=WC4F[[1,3,3,3]];
WC4F[[3,2,1,1]]=WC4F[[2,3,1,1]];
WC4F[[3,2,1,2]]=WC4F[[2,3,2,1]];
WC4F[[3,2,1,3]]=WC4F[[2,3,3,1]];
WC4F[[3,2,2,1]]=WC4F[[2,3,1,2]];
WC4F[[3,2,2,2]]=WC4F[[2,3,2,2]];
WC4F[[3,2,2,3]]=WC4F[[2,3,3,2]];
WC4F[[3,2,3,1]]=WC4F[[2,3,1,3]];
WC4F[[3,2,3,2]]=WC4F[[2,3,2,3]];
WC4F[[3,2,3,3]]=WC4F[[2,3,3,3]];
WC4F[[3,3,2,1]]=WC4F[[3,3,1,2]];
WC4F[[3,3,3,1]]=WC4F[[3,3,1,3]];
WC4F[[3,3,3,2]]=WC4F[[3,3,2,3]];
,(* Imaginary part *)
WC4F[[1,1,1,1]]=0;
WC4F[[1,1,2,1]]=-WC4F[[1,1,1,2]];
WC4F[[1,1,2,2]]=0;
WC4F[[1,1,3,1]]=-WC4F[[1,1,1,3]];
WC4F[[1,1,3,2]]=-WC4F[[1,1,2,3]];
WC4F[[1,1,3,3]]=0;
WC4F[[2,1,1,1]]=-WC4F[[1,2,1,1]];
WC4F[[2,1,1,2]]=-WC4F[[1,2,2,1]];
WC4F[[2,1,1,3]]=-WC4F[[1,2,3,1]];
WC4F[[2,1,2,1]]=-WC4F[[1,2,1,2]];
WC4F[[2,1,2,2]]=-WC4F[[1,2,2,2]];
WC4F[[2,1,2,3]]=-WC4F[[1,2,3,2]];
WC4F[[2,1,3,1]]=-WC4F[[1,2,1,3]];
WC4F[[2,1,3,2]]=-WC4F[[1,2,2,3]];
WC4F[[2,1,3,3]]=-WC4F[[1,2,3,3]];
WC4F[[2,2,1,1]]=0;
WC4F[[2,2,2,1]]=-WC4F[[2,2,1,2]];
WC4F[[2,2,2,2]]=0;
WC4F[[2,2,3,1]]=-WC4F[[2,2,1,3]];
WC4F[[2,2,3,2]]=-WC4F[[2,2,2,3]];
WC4F[[2,2,3,3]]=0;
WC4F[[3,1,1,1]]=-WC4F[[1,3,1,1]];
WC4F[[3,1,1,2]]=-WC4F[[1,3,2,1]];
WC4F[[3,1,1,3]]=-WC4F[[1,3,3,1]];
WC4F[[3,1,2,1]]=-WC4F[[1,3,1,2]];
WC4F[[3,1,2,2]]=-WC4F[[1,3,2,2]];
WC4F[[3,1,2,3]]=-WC4F[[1,3,3,2]];
WC4F[[3,1,3,1]]=-WC4F[[1,3,1,3]];
WC4F[[3,1,3,2]]=-WC4F[[1,3,2,3]];
WC4F[[3,1,3,3]]=-WC4F[[1,3,3,3]];
WC4F[[3,2,1,1]]=-WC4F[[2,3,1,1]];
WC4F[[3,2,1,2]]=-WC4F[[2,3,2,1]];
WC4F[[3,2,1,3]]=-WC4F[[2,3,3,1]];
WC4F[[3,2,2,1]]=-WC4F[[2,3,1,2]];
WC4F[[3,2,2,2]]=-WC4F[[2,3,2,2]];
WC4F[[3,2,2,3]]=-WC4F[[2,3,3,2]];
WC4F[[3,2,3,1]]=-WC4F[[2,3,1,3]];
WC4F[[3,2,3,2]]=-WC4F[[2,3,2,3]];
WC4F[[3,2,3,3]]=-WC4F[[2,3,3,3]];
WC4F[[3,3,1,1]]=0;
WC4F[[3,3,2,1]]=-WC4F[[3,3,1,2]];
WC4F[[3,3,2,2]]=0;
WC4F[[3,3,3,1]]=-WC4F[[3,3,1,3]];
WC4F[[3,3,3,2]]=-WC4F[[3,3,2,3]];
WC4F[[3,3,3,3]]=0;
];
];
If[cat==6,(* two identical XX currents special case Cee (class 8 E-F) *)
If[ReIm==0, (* Real part *)
WC4F[[1,1,2,1]]=WC4F[[1,1,1,2]];
WC4F[[1,1,3,1]]=WC4F[[1,1,1,3]];
WC4F[[1,1,3,2]]=WC4F[[1,1,2,3]];
WC4F[[1,2,1,1]]=WC4F[[1,1,1,2]];
WC4F[[1,2,2,1]]=WC4F[[1,1,2,2]];
WC4F[[1,2,3,1]]=WC4F[[1,1,2,3]];
WC4F[[1,3,1,1]]=WC4F[[1,1,1,3]];
WC4F[[1,3,1,2]]=WC4F[[1,2,1,3]];
WC4F[[1,3,2,1]]=WC4F[[1,1,2,3]];
WC4F[[1,3,2,2]]=WC4F[[1,2,2,3]];
WC4F[[1,3,3,1]]=WC4F[[1,1,3,3]];
WC4F[[1,3,3,2]]=WC4F[[1,2,3,3]];
WC4F[[2,1,1,1]]=WC4F[[1,1,1,2]];
WC4F[[2,1,1,2]]=WC4F[[1,1,2,2]];
WC4F[[2,1,1,3]]=WC4F[[1,1,2,3]];
WC4F[[2,1,2,1]]=WC4F[[1,2,1,2]];
WC4F[[2,1,2,2]]=WC4F[[1,2,2,2]];
WC4F[[2,1,2,3]]=WC4F[[1,2,3,2]];
WC4F[[2,1,3,1]]=WC4F[[1,2,1,3]];
WC4F[[2,1,3,2]]=WC4F[[1,2,2,3]];
WC4F[[2,1,3,3]]=WC4F[[1,2,3,3]];
WC4F[[2,2,1,1]]=WC4F[[1,1,2,2]];
WC4F[[2,2,1,2]]=WC4F[[1,2,2,2]];
WC4F[[2,2,1,3]]=WC4F[[1,2,2,3]];
WC4F[[2,2,2,1]]=WC4F[[1,2,2,2]];
WC4F[[2,2,3,1]]=WC4F[[1,2,2,3]];
WC4F[[2,2,3,2]]=WC4F[[2,2,2,3]];
WC4F[[2,3,1,1]]=WC4F[[1,1,2,3]];
WC4F[[2,3,1,2]]=WC4F[[1,2,2,3]];
WC4F[[2,3,1,3]]=WC4F[[1,3,2,3]];
WC4F[[2,3,2,1]]=WC4F[[1,2,3,2]];
WC4F[[2,3,2,2]]=WC4F[[2,2,2,3]];
WC4F[[2,3,3,1]]=WC4F[[1,2,3,3]];
WC4F[[2,3,3,2]]=WC4F[[2,2,3,3]];
WC4F[[3,1,1,1]]=WC4F[[1,1,1,3]];
WC4F[[3,1,1,2]]=WC4F[[1,1,2,3]];
WC4F[[3,1,1,3]]=WC4F[[1,1,3,3]];
WC4F[[3,1,2,1]]=WC4F[[1,2,1,3]];
WC4F[[3,1,2,2]]=WC4F[[1,2,2,3]];
WC4F[[3,1,2,3]]=WC4F[[1,2,3,3]];
WC4F[[3,1,3,1]]=WC4F[[1,3,1,3]];
WC4F[[3,1,3,2]]=WC4F[[1,3,2,3]];
WC4F[[3,1,3,3]]=WC4F[[1,3,3,3]];
WC4F[[3,2,1,1]]=WC4F[[1,1,2,3]];
WC4F[[3,2,1,2]]=WC4F[[1,2,3,2]];
WC4F[[3,2,1,3]]=WC4F[[1,2,3,3]];
WC4F[[3,2,2,1]]=WC4F[[1,2,2,3]];
WC4F[[3,2,2,2]]=WC4F[[2,2,2,3]];
WC4F[[3,2,2,3]]=WC4F[[2,2,3,3]];
WC4F[[3,2,3,1]]=WC4F[[1,3,2,3]];
WC4F[[3,2,3,2]]=WC4F[[2,3,2,3]];
WC4F[[3,2,3,3]]=WC4F[[2,3,3,3]];
WC4F[[3,3,1,1]]=WC4F[[1,1,3,3]];
WC4F[[3,3,1,2]]=WC4F[[1,2,3,3]];
WC4F[[3,3,1,3]]=WC4F[[1,3,3,3]];
WC4F[[3,3,2,1]]=WC4F[[1,2,3,3]];
WC4F[[3,3,2,2]]=WC4F[[2,2,3,3]];
WC4F[[3,3,2,3]]=WC4F[[2,3,3,3]];
WC4F[[3,3,3,1]]=WC4F[[1,3,3,3]];
WC4F[[3,3,3,2]]=WC4F[[2,3,3,3]];
,(* Imaginary part *)
WC4F[[1,1,1,1]]=0;
WC4F[[1,1,2,1]]=-WC4F[[1,1,1,2]];
WC4F[[1,1,2,2]]=0;
WC4F[[1,1,3,1]]=-WC4F[[1,1,1,3]];
WC4F[[1,1,3,2]]=-WC4F[[1,1,2,3]];
WC4F[[1,1,3,3]]=0;
WC4F[[1,2,1,1]]=WC4F[[1,1,1,2]];
WC4F[[1,2,2,1]]=0;
WC4F[[1,2,3,1]]=-WC4F[[1,1,2,3]];
WC4F[[1,3,1,1]]=WC4F[[1,1,1,3]];
WC4F[[1,3,1,2]]=WC4F[[1,2,1,3]];
WC4F[[1,3,2,1]]=WC4F[[1,1,2,3]];
WC4F[[1,3,2,2]]=WC4F[[1,2,2,3]];
WC4F[[1,3,3,1]]=0;
WC4F[[1,3,3,2]]=WC4F[[1,2,3,3]];
WC4F[[2,1,1,1]]=-WC4F[[1,1,1,2]];
WC4F[[2,1,1,2]]=0;
WC4F[[2,1,1,3]]=WC4F[[1,1,2,3]];
WC4F[[2,1,2,1]]=-WC4F[[1,2,1,2]];
WC4F[[2,1,2,2]]=-WC4F[[1,2,2,2]];
WC4F[[2,1,2,3]]=-WC4F[[1,2,3,2]];
WC4F[[2,1,3,1]]=-WC4F[[1,2,1,3]];
WC4F[[2,1,3,2]]=-WC4F[[1,2,2,3]];
WC4F[[2,1,3,3]]=-WC4F[[1,2,3,3]];
WC4F[[2,2,1,1]]=0;
WC4F[[2,2,1,2]]=WC4F[[1,2,2,2]];
WC4F[[2,2,1,3]]=WC4F[[1,2,2,3]];
WC4F[[2,2,2,1]]=-WC4F[[1,2,2,2]];
WC4F[[2,2,2,2]]=0;
WC4F[[2,2,3,1]]=-WC4F[[1,2,2,3]];
WC4F[[2,2,3,2]]=-WC4F[[2,2,2,3]];
WC4F[[2,2,3,3]]=0;
WC4F[[2,3,1,1]]=WC4F[[1,1,2,3]];
WC4F[[2,3,1,2]]=WC4F[[1,2,2,3]];
WC4F[[2,3,1,3]]=WC4F[[1,3,2,3]];
WC4F[[2,3,2,1]]=-WC4F[[1,2,3,2]];
WC4F[[2,3,2,2]]=WC4F[[2,2,2,3]];
WC4F[[2,3,3,1]]=-WC4F[[1,2,3,3]];
WC4F[[2,3,3,2]]=0;
WC4F[[3,1,1,1]]=-WC4F[[1,1,1,3]];
WC4F[[3,1,1,2]]=-WC4F[[1,1,2,3]];
WC4F[[3,1,1,3]]=0;
WC4F[[3,1,2,1]]=-WC4F[[1,2,1,3]];
WC4F[[3,1,2,2]]=-WC4F[[1,2,2,3]];
WC4F[[3,1,2,3]]=-WC4F[[1,2,3,3]];
WC4F[[3,1,3,1]]=-WC4F[[1,3,1,3]];
WC4F[[3,1,3,2]]=-WC4F[[1,3,2,3]];
WC4F[[3,1,3,3]]=-WC4F[[1,3,3,3]];
WC4F[[3,2,1,1]]=-WC4F[[1,1,2,3]];
WC4F[[3,2,1,2]]=WC4F[[1,2,3,2]];
WC4F[[3,2,1,3]]=WC4F[[1,2,3,3]];
WC4F[[3,2,2,1]]=-WC4F[[1,2,2,3]];
WC4F[[3,2,2,2]]=-WC4F[[2,2,2,3]];
WC4F[[3,2,2,3]]=0;
WC4F[[3,2,3,1]]=-WC4F[[1,3,2,3]];
WC4F[[3,2,3,2]]=-WC4F[[2,3,2,3]];
WC4F[[3,2,3,3]]=-WC4F[[2,3,3,3]];
WC4F[[3,3,1,1]]=0;
WC4F[[3,3,1,2]]=WC4F[[1,2,3,3]];
WC4F[[3,3,1,3]]=WC4F[[1,3,3,3]];
WC4F[[3,3,2,1]]=-WC4F[[1,2,3,3]];
WC4F[[3,3,2,2]]=0;
WC4F[[3,3,2,3]]=WC4F[[2,3,3,3]];
WC4F[[3,3,3,1]]=-WC4F[[1,3,3,3]];
WC4F[[3,3,3,2]]=-WC4F[[2,3,3,3]];
WC4F[[3,3,3,3]]=0;
];
];
If[cat==7,(* B-violating special case qque *)
WC4F[[2,1,1,1]]=WC4F[[1,2,1,1]];
WC4F[[2,1,1,2]]=WC4F[[1,2,1,2]];
WC4F[[2,1,1,3]]=WC4F[[1,2,1,3]];
WC4F[[2,1,2,1]]=WC4F[[1,2,2,1]];
WC4F[[2,1,2,2]]=WC4F[[1,2,2,2]];
WC4F[[2,1,2,3]]=WC4F[[1,2,2,3]];
WC4F[[2,1,3,1]]=WC4F[[1,2,3,1]];
WC4F[[2,1,3,2]]=WC4F[[1,2,3,2]];
WC4F[[2,1,3,3]]=WC4F[[1,2,3,3]];
WC4F[[3,1,1,1]]=WC4F[[1,3,1,1]];
WC4F[[3,1,1,2]]=WC4F[[1,3,1,2]];
WC4F[[3,1,1,3]]=WC4F[[1,3,1,3]];
WC4F[[3,1,2,1]]=WC4F[[1,3,2,1]];
WC4F[[3,1,2,2]]=WC4F[[1,3,2,2]];
WC4F[[3,1,2,3]]=WC4F[[1,3,2,3]];
WC4F[[3,1,3,1]]=WC4F[[1,3,3,1]];
WC4F[[3,1,3,2]]=WC4F[[1,3,3,2]];
WC4F[[3,1,3,3]]=WC4F[[1,3,3,3]];
WC4F[[3,2,1,1]]=WC4F[[2,3,1,1]];
WC4F[[3,2,1,2]]=WC4F[[2,3,1,2]];
WC4F[[3,2,1,3]]=WC4F[[2,3,1,3]];
WC4F[[3,2,2,1]]=WC4F[[2,3,2,1]];
WC4F[[3,2,2,2]]=WC4F[[2,3,2,2]];
WC4F[[3,2,2,3]]=WC4F[[2,3,2,3]];
WC4F[[3,2,3,1]]=WC4F[[2,3,3,1]];
WC4F[[3,2,3,2]]=WC4F[[2,3,3,2]];
WC4F[[3,2,3,3]]=WC4F[[2,3,3,3]];
];
If[cat==8,(* B-violating special case qqql *)
WC4F[[2,1,1,1]]=WC4F[[1,1,2,1]];
WC4F[[2,1,1,2]]=WC4F[[1,1,2,2]];
WC4F[[2,1,1,3]]=WC4F[[1,1,2,3]];
WC4F[[2,2,1,1]]=WC4F[[1,2,2,1]];
WC4F[[2,2,1,2]]=WC4F[[1,2,2,2]];
WC4F[[2,2,1,3]]=WC4F[[1,2,2,3]];
WC4F[[3,1,1,1]]=WC4F[[1,1,3,1]];
WC4F[[3,1,1,2]]=WC4F[[1,1,3,2]];
WC4F[[3,1,1,3]]=WC4F[[1,1,3,3]];
WC4F[[3,1,2,1]]=WC4F[[2,3,1,1]]+WC4F[[2,1,3,1]]-WC4F[[1,3,2,1]];
WC4F[[3,1,2,2]]=WC4F[[2,3,1,2]]+WC4F[[2,1,3,2]]-WC4F[[1,3,2,2]];
WC4F[[3,1,2,3]]=WC4F[[2,3,1,3]]+WC4F[[2,1,3,3]]-WC4F[[1,3,2,3]];
WC4F[[3,2,1,1]]=WC4F[[1,3,2,1]]+WC4F[[1,2,3,1]]-WC4F[[2,3,1,1]];
WC4F[[3,2,1,2]]=WC4F[[1,3,2,2]]+WC4F[[1,2,3,2]]-WC4F[[2,3,1,2]];
WC4F[[3,2,1,3]]=WC4F[[1,3,2,3]]+WC4F[[1,2,3,3]]-WC4F[[2,3,1,3]];
WC4F[[3,2,2,1]]=WC4F[[2,2,3,1]];
WC4F[[3,2,2,2]]=WC4F[[2,2,3,2]];
WC4F[[3,2,2,3]]=WC4F[[2,2,3,3]];
WC4F[[3,3,1,1]]=WC4F[[1,3,3,1]];
WC4F[[3,3,1,2]]=WC4F[[1,3,3,2]];
WC4F[[3,3,1,3]]=WC4F[[1,3,3,3]];
WC4F[[3,3,2,1]]=WC4F[[2,3,3,1]];
WC4F[[3,3,2,2]]=WC4F[[2,3,3,2]];
WC4F[[3,3,2,3]]=WC4F[[2,3,3,3]];
];
Return[WC4F];
];

ReadWET[i_,cat_,ReIm_]:=Block[{k},
nOpWET[1]=8;
nOpWET[2]=15;
nOpWET[3]=80;
nOpWET[4]=4;
nOpWET[5]=30;
k=1;
While[i+k<=Length[inputWCs]&&inputWCs[[i+k,1]]!="Block"&&inputWCs[[i+k,1]]!="BLOCK",
Do[If[inputWCs[[i+k,1]]==r,
If[ReIm==0, (* Real part *)
ReWCWET[cat,r]=inputWCs[[i+k,2]];
,(* Imaginary part *)
ImWCWET[cat,r]=inputWCs[[i+k,2]];
];
];,{r,1,nOpWET[cat]}];
k++;
];
];


ReadSMEFTWCsFile:=Block[{},
Do[
line=inputWCs[[i]];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WC1",ReadWC0F[1,i];]; (* X^3 *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WC2",ReadWC0F[2,i];];(* \[CurlyPhi]^6 *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WC3",ReadWC0F[3,i];]; (* \[CurlyPhi]^4D^2 *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WC4",ReadWC0F[4,i];]; (* X^2\[CurlyPhi]^2 *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCUPHI",ReWC[5,1]=ReadWC2F[i,1,0];]; (* \[Psi]^2\[CurlyPhi]^3 *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCUPHI",ImWC[5,1]=ReadWC2F[i,1,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCDPHI",ReWC[5,2]=ReadWC2F[i,1,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCDPHI",ImWC[5,2]=ReadWC2F[i,1,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCEPHI",ReWC[5,3]=ReadWC2F[i,1,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCEPHI",ImWC[5,3]=ReadWC2F[i,1,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCEW",ReWC[6,1]=ReadWC2F[i,1,0];]; (* \[Psi]^2X \[CurlyPhi] *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCEW",ImWC[6,1]=ReadWC2F[i,1,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCEB",ReWC[6,2]=ReadWC2F[i,1,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCEB",ImWC[6,2]=ReadWC2F[i,1,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCUG",ReWC[6,3]=ReadWC2F[i,1,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCUG",ImWC[6,3]=ReadWC2F[i,1,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCUW",ReWC[6,4]=ReadWC2F[i,1,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCUW",ImWC[6,4]=ReadWC2F[i,1,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCUB",ReWC[6,5]=ReadWC2F[i,1,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCUB",ImWC[6,5]=ReadWC2F[i,1,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCDG",ReWC[6,6]=ReadWC2F[i,1,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCDG",ImWC[6,6]=ReadWC2F[i,1,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCDW",ReWC[6,7]=ReadWC2F[i,1,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCDW",ImWC[6,7]=ReadWC2F[i,1,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCDB",ReWC[6,8]=ReadWC2F[i,1,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCDB",ImWC[6,8]=ReadWC2F[i,1,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCPHIL1",ReWC[7,1]=ReadWC2F[i,2,0];];  (* \[Psi]^2\[CurlyPhi]^2D *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCPHIL1",ImWC[7,1]=ReadWC2F[i,2,1];]; 
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCPHIL3",ReWC[7,2]=ReadWC2F[i,2,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCPHIL3",ImWC[7,2]=ReadWC2F[i,2,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCPHIE",ReWC[7,3]=ReadWC2F[i,2,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCPHIE",ImWC[7,3]=ReadWC2F[i,2,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCPHIQ1",ReWC[7,4]=ReadWC2F[i,2,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCPHIQ1",ImWC[7,4]=ReadWC2F[i,2,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCPHIQ3",ReWC[7,5]=ReadWC2F[i,2,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCPHIQ3",ImWC[7,5]=ReadWC2F[i,2,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCPHIU",ReWC[7,6]=ReadWC2F[i,2,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCPHIU",ImWC[7,6]=ReadWC2F[i,2,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCPHID",ReWC[7,7]=ReadWC2F[i,2,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCPHID",ImWC[7,7]=ReadWC2F[i,2,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCPHIUD",ReWC[7,8]=ReadWC2F[i,1,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCPHIUD",ImWC[7,8]=ReadWC2F[i,1,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCLL",ReWC[8,1]=ReadWC4F[i,4,0];]; (* LL LL *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCLL",ImWC[8,1]=ReadWC4F[i,4,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCQQ1",ReWC[8,2]=ReadWC4F[i,4,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCQQ1",ImWC[8,2]=ReadWC4F[i,4,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCQQ3",ReWC[8,3]=ReadWC4F[i,4,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCQQ3",ImWC[8,3]=ReadWC4F[i,4,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCLQ1",ReWC[8,4]=ReadWC4F[i,5,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCLQ1",ImWC[8,4]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCLQ3",ReWC[8,5]=ReadWC4F[i,5,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCLQ3",ImWC[8,5]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCEE",ReWC[9,1]=ReadWC4F[i,6,0];]; (* RR RR *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCEE",ImWC[9,1]=ReadWC4F[i,6,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCUU",ReWC[9,2]=ReadWC4F[i,4,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCUU",ImWC[9,2]=ReadWC4F[i,4,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCDD",ReWC[9,3]=ReadWC4F[i,4,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCDD",ImWC[9,3]=ReadWC4F[i,4,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCEU",ReWC[9,4]=ReadWC4F[i,5,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCEU",ImWC[9,4]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCED",ReWC[9,5]=ReadWC4F[i,5,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCED",ImWC[9,5]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCUD1",ReWC[9,6]=ReadWC4F[i,5,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCUD1",ImWC[9,6]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCUD8",ReWC[9,7]=ReadWC4F[i,5,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCUD8",ImWC[9,7]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCLE",ReWC[10,1]=ReadWC4F[i,5,0];]; (* LL RR *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCLE",ImWC[10,1]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCLU",ReWC[10,2]=ReadWC4F[i,5,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCLU",ImWC[10,2]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCLD",ReWC[10,3]=ReadWC4F[i,5,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCLD",ImWC[10,3]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCQE",ReWC[10,4]=ReadWC4F[i,5,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCQE",ImWC[10,4]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCQU1",ReWC[10,5]=ReadWC4F[i,5,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCQU1",ImWC[10,5]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCQD1",ReWC[10,6]=ReadWC4F[i,5,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCQD1",ImWC[10,6]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCQU8",ReWC[10,7]=ReadWC4F[i,5,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCQU8",ImWC[10,7]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCQD8",ReWC[10,8]=ReadWC4F[i,5,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCQD8",ImWC[10,8]=ReadWC4F[i,5,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCLEDQ",ReWC[11,1]=ReadWC4F[i,3,0];]; (* LR RL *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCLEDQ",ImWC[11,1]=ReadWC4F[i,3,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCQUQD1",ReWC[12,1]=ReadWC4F[i,3,0];]; (* LR LR *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCQUQD1",ImWC[12,1]=ReadWC4F[i,3,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCQUQD8",ReWC[12,2]=ReadWC4F[i,3,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCQUQD8",ImWC[12,2]=ReadWC4F[i,3,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCLEQU1",ReWC[12,3]=ReadWC4F[i,3,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCLEQU1",ImWC[12,3]=ReadWC4F[i,3,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCLEQU3",ReWC[12,4]=ReadWC4F[i,3,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCLEQU3",ImWC[12,4]=ReadWC4F[i,3,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCDUQL",ReWC[13,1]=ReadWC4F[i,3,0];]; (* B-violating *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCDUQL",ImWC[13,1]=ReadWC4F[i,3,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCQQUE",ReWC[13,2]=ReadWC4F[i,7,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCQQUE",ImWC[13,2]=ReadWC4F[i,7,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCQQQL",ReWC[13,3]=ReadWC4F[i,8,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCQQQL",ImWC[13,3]=ReadWC4F[i,8,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCDUUE",ReWC[13,4]=ReadWC4F[i,3,0];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCDUUE",ImWC[13,4]=ReadWC4F[i,3,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="WCLLPHIPHI",ReWC[14,1]=ReadWC2F[i,3,0];]; (* dim-5 *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMWCLLPHIPHI",ImWC[14,1]=ReadWC2F[i,3,1];];
,{i,1,Length[inputWCs]}];
];


ReadSMEFTWCsFileWCXF:=Block[{WCsNumPre},

(* Function to replace real and imaginary parts by their values *)
SubReIm[x_]:=Block[{},
If[Length[x]==2,Return["Re"+I "Im"/.x],Return[x]];
];

WCsNumPre=WCsWCXF/.wcxfdata;
WCsNumD6=HIGHSCALE^2SubReIm/@WCsNumPre[[1;;1629]]; (* dim-6 WCs *)
WCsNumD5=HIGHSCALE SubReIm/@WCsNumPre[[1630;;1635]]; (* dim-5 WCs *)
WCsNum=Join[WCsNumD6,WCsNumD5];

];


ReadWETWCsFile:=Block[{},
Do[
line=inputWCs[[i]];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="BS2",ReadWET[i,1,0];]; (* BS2 *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMBS2",ReadWET[i,1,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="BC1",ReadWET[i,2,0];]; (* BC1 *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMBC1",ReadWET[i,2,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="BS1H",ReadWET[i,3,0];]; (* BS1H *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMBS1H",ReadWET[i,3,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="BS1GB",ReadWET[i,4,0];]; (* BS1GB *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMBS1GB",ReadWET[i,4,1];];
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="BS1SL",ReadWET[i,5,0];]; (* BS1SL *)
If[ToUpperCase[line[[1]]]=="BLOCK"&&ToUpperCase[line[[2]]]=="IMBS1SL",ReadWET[i,5,1];];
,{i,1,Length[inputWCs]}];
];


CreateInputSubSMEFT:=Block[{},

If[!inputcreated,
SMInput={g->Init[g],gp->Init[gp],gs->Init[gs],\[Lambda]->Init[\[Lambda]],m2->Init[m2],GU[1,1]->Init[GuX][[1,1]],GU[1,2]->Init[GuX][[1,2]],GU[1,3]->Init[GuX][[1,3]],GU[2,1]->Init[GuX][[2,1]],GU[2,2]->Init[GuX][[2,2]],GU[2,3]->Init[GuX][[2,3]],GU[3,1]->Init[GuX][[3,1]],GU[3,2]->Init[GuX][[3,2]],GU[3,3]->Init[GuX][[3,3]],GD[1,1]->Init[GdX][[1,1]],GD[1,2]->Init[GdX][[1,2]],GD[1,3]->Init[GdX][[1,3]],GD[2,1]->Init[GdX][[2,1]],GD[2,2]->Init[GdX][[2,2]],GD[2,3]->Init[GdX][[2,3]],GD[3,1]->Init[GdX][[3,1]],GD[3,2]->Init[GdX][[3,2]],GD[3,3]->Init[GdX][[3,3]],GE[1,1]->Init[GeX][[1,1]],GE[1,2]->Init[GeX][[1,2]],GE[1,3]->Init[GeX][[1,3]],GE[2,1]->Init[GeX][[2,1]],GE[2,2]->Init[GeX][[2,2]],GE[2,3]->Init[GeX][[2,3]],GE[3,1]->Init[GeX][[3,1]],GE[3,2]->Init[GeX][[3,2]],GE[3,3]->Init[GeX][[3,3]],\[Theta]->Init[\[Theta]],\[Theta]p->Init[\[Theta]p],\[Theta]s->Init[\[Theta]s]};
WCsInput0F={WC[G]->Init[G],WC[Gtilde]->Init[Gtilde],WC[W]->Init[W],WC[Wtilde]->Init[Wtilde],WC[\[CurlyPhi]]->Init[\[CurlyPhi]],WC[\[CurlyPhi]\[EmptySquare]]->Init[\[CurlyPhi]\[EmptySquare]],WC[\[CurlyPhi]D]->Init[\[CurlyPhi]D],WC[\[CurlyPhi]G]->Init[\[CurlyPhi]G],WC[\[CurlyPhi]B]->Init[\[CurlyPhi]B],WC[\[CurlyPhi]W]->Init[\[CurlyPhi]W],WC[\[CurlyPhi]WB]->Init[\[CurlyPhi]WB],WC[\[CurlyPhi]Gtilde]->Init[\[CurlyPhi]Gtilde],WC[\[CurlyPhi]Btilde]->Init[\[CurlyPhi]Btilde],WC[\[CurlyPhi]Wtilde]->Init[\[CurlyPhi]Wtilde],WC[\[CurlyPhi]WtildeB]->Init[\[CurlyPhi]WtildeB]};
WCsInput2F=Flatten[Table[MatrixListWCs2F[[i,2]][r,s]->Init[MatrixListWCs2F[[i,3]]][[r,s]],{i,1,Length[MatrixListWCs2F]},{r,1,3},{s,1,3}]];
WCsInput4F=Flatten[Table[MatrixListWCs4F[[i,2]][p,r,s,t]->Init[MatrixListWCs4F[[i,3]]][[p,r,s,t]],{i,1,Length[MatrixListWCs4F]},{p,1,3},{r,1,3},{s,1,3},{t,1,3}]];
WCsInputdim5=Flatten[Table[MatrixListWCsdim5[[i,2]][r,s]->Init[MatrixListWCsdim5[[i,3]]][[r,s]],{i,1,Length[MatrixListWCsdim5]},{r,1,3},{s,1,3}]];
WCsInput=Join[WCsInput0F,WCsInput2F,WCsInput4F,WCsInputdim5];
inputPre=Join[SMInput,WCsInput];
input=Dispatch[inputPre];
inputcreated=True;
];

SMInput={g->Init[g],gp->Init[gp],gs->Init[gs],\[Lambda]->Init[\[Lambda]],m2->Init[m2],GU[1,1]->Init[GuX][[1,1]],GU[1,2]->Init[GuX][[1,2]],GU[1,3]->Init[GuX][[1,3]],GU[2,1]->Init[GuX][[2,1]],GU[2,2]->Init[GuX][[2,2]],GU[2,3]->Init[GuX][[2,3]],GU[3,1]->Init[GuX][[3,1]],GU[3,2]->Init[GuX][[3,2]],GU[3,3]->Init[GuX][[3,3]],GD[1,1]->Init[GdX][[1,1]],GD[1,2]->Init[GdX][[1,2]],GD[1,3]->Init[GdX][[1,3]],GD[2,1]->Init[GdX][[2,1]],GD[2,2]->Init[GdX][[2,2]],GD[2,3]->Init[GdX][[2,3]],GD[3,1]->Init[GdX][[3,1]],GD[3,2]->Init[GdX][[3,2]],GD[3,3]->Init[GdX][[3,3]],GE[1,1]->Init[GeX][[1,1]],GE[1,2]->Init[GeX][[1,2]],GE[1,3]->Init[GeX][[1,3]],GE[2,1]->Init[GeX][[2,1]],GE[2,2]->Init[GeX][[2,2]],GE[2,3]->Init[GeX][[2,3]],GE[3,1]->Init[GeX][[3,1]],GE[3,2]->Init[GeX][[3,2]],GE[3,3]->Init[GeX][[3,3]],\[Theta]->Init[\[Theta]],\[Theta]p->Init[\[Theta]p],\[Theta]s->Init[\[Theta]s]};
WCsInput0F={WC[G]->Init[G],WC[Gtilde]->Init[Gtilde],WC[W]->Init[W],WC[Wtilde]->Init[Wtilde],WC[\[CurlyPhi]]->Init[\[CurlyPhi]],WC[\[CurlyPhi]\[EmptySquare]]->Init[\[CurlyPhi]\[EmptySquare]],WC[\[CurlyPhi]D]->Init[\[CurlyPhi]D],WC[\[CurlyPhi]G]->Init[\[CurlyPhi]G],WC[\[CurlyPhi]B]->Init[\[CurlyPhi]B],WC[\[CurlyPhi]W]->Init[\[CurlyPhi]W],WC[\[CurlyPhi]WB]->Init[\[CurlyPhi]WB],WC[\[CurlyPhi]Gtilde]->Init[\[CurlyPhi]Gtilde],WC[\[CurlyPhi]Btilde]->Init[\[CurlyPhi]Btilde],WC[\[CurlyPhi]Wtilde]->Init[\[CurlyPhi]Wtilde],WC[\[CurlyPhi]WtildeB]->Init[\[CurlyPhi]WtildeB]};
WCsInput2F=Flatten[Table[MatrixListWCs2F[[i,2]][r,s]->Init[MatrixListWCs2F[[i,3]]][[r,s]],{i,1,Length[MatrixListWCs2F]},{r,1,3},{s,1,3}]];
WCsInput4F=Flatten[Table[MatrixListWCs4F[[i,2]][p,r,s,t]->Init[MatrixListWCs4F[[i,3]]][[p,r,s,t]],{i,1,Length[MatrixListWCs4F]},{p,1,3},{r,1,3},{s,1,3},{t,1,3}]];
WCsInputdim5=Flatten[Table[MatrixListWCsdim5[[i,2]][r,s]->Init[MatrixListWCsdim5[[i,3]]][[r,s]],{i,1,Length[MatrixListWCsdim5]},{r,1,3},{s,1,3}]];
WCsInput=Join[WCsInput0F,WCsInput2F,WCsInput4F,WCsInputdim5];
inputPre=Join[SMInput,WCsInput];
input=Dispatch[inputPre];
inputcreated=True;

];


GenerateInputSMEFT:=Block[{},

(* Gauge couplings *)

Init[g]=GAUGE[1];
Init[gp]=GAUGE[2];
Init[gs]=GAUGE[3];

(* Scalar potential parameters *)

Init[\[Lambda]]=SCALAR[1];
Init[m2]=SCALAR[2];

(* Yukawa couplings *)

If[CPV==0,
Init[GuX]=ReYukU;
Init[GdX]=ReYukD;
Init[GeX]=ReYukE;
,
Init[GuX]=ReYukU+I ImYukU;
Init[GdX]=ReYukD+I ImYukD;
Init[GeX]=ReYukE+I ImYukE;
];

(* Theta terms *)

Init[\[Theta]]=THETA[1];
Init[\[Theta]p]=THETA[2];
Init[\[Theta]s]=THETA[3];

(* Wilson coefficients *)

Init[G]=WC[1,1];
Init[Gtilde]=WC[1,2];
Init[W]=WC[1,3];
Init[Wtilde]=WC[1,4];

Init[\[CurlyPhi]]=WC[2,1];

Init[\[CurlyPhi]\[EmptySquare]]=WC[3,1];
Init[\[CurlyPhi]D]=WC[3,2];

Init[\[CurlyPhi]G]=WC[4,1];
Init[\[CurlyPhi]B]=WC[4,2];
Init[\[CurlyPhi]W]=WC[4,3];
Init[\[CurlyPhi]WB]=WC[4,4];
Init[\[CurlyPhi]Gtilde]=WC[4,5];
Init[\[CurlyPhi]Btilde]=WC[4,6];
Init[\[CurlyPhi]Wtilde]=WC[4,7];
Init[\[CurlyPhi]WtildeB]=WC[4,8];

If[CPV==0,
Init[u\[CurlyPhi]]=ReWC[5,1];
Init[d\[CurlyPhi]]=ReWC[5,2];
Init[e\[CurlyPhi]]=ReWC[5,3];
,
Init[u\[CurlyPhi]]=ReWC[5,1]+I ImWC[5,1];
Init[d\[CurlyPhi]]=ReWC[5,2]+I ImWC[5,2];
Init[e\[CurlyPhi]]=ReWC[5,3]+I ImWC[5,3];
];

If[CPV==0,
Init[eW]=ReWC[6,1];
Init[eB]=ReWC[6,2];
Init[uG]=ReWC[6,3];
Init[uW]=ReWC[6,4];
Init[uB]=ReWC[6,5];
Init[dG]=ReWC[6,6];
Init[dW]=ReWC[6,7];
Init[dB]=ReWC[6,8];
,
Init[eW]=ReWC[6,1]+I ImWC[6,1];
Init[eB]=ReWC[6,2]+I ImWC[6,2];
Init[uG]=ReWC[6,3]+I ImWC[6,3];
Init[uW]=ReWC[6,4]+I ImWC[6,4];
Init[uB]=ReWC[6,5]+I ImWC[6,5];
Init[dG]=ReWC[6,6]+I ImWC[6,6];
Init[dW]=ReWC[6,7]+I ImWC[6,7];
Init[dB]=ReWC[6,8]+I ImWC[6,8];
];

If[CPV==0,
Init[\[CurlyPhi]l1]=ReWC[7,1];
Init[\[CurlyPhi]l3]=ReWC[7,2];
Init[\[CurlyPhi]e]=ReWC[7,3];
Init[\[CurlyPhi]q1]=ReWC[7,4];
Init[\[CurlyPhi]q3]=ReWC[7,5];
Init[\[CurlyPhi]u]=ReWC[7,6];
Init[\[CurlyPhi]d]=ReWC[7,7];
Init[\[CurlyPhi]ud]=ReWC[7,8];
,
Init[\[CurlyPhi]l1]=ReWC[7,1]+I ImWC[7,1];
Init[\[CurlyPhi]l3]=ReWC[7,2]+I ImWC[7,2];
Init[\[CurlyPhi]e]=ReWC[7,3]+I ImWC[7,3];
Init[\[CurlyPhi]q1]=ReWC[7,4]+I ImWC[7,4];
Init[\[CurlyPhi]q3]=ReWC[7,5]+I ImWC[7,5];
Init[\[CurlyPhi]u]=ReWC[7,6]+I ImWC[7,6];
Init[\[CurlyPhi]d]=ReWC[7,7]+I ImWC[7,7];
Init[\[CurlyPhi]ud]=ReWC[7,8]+I ImWC[7,8];
];

If[CPV==0,
Init[ll]=ReWC[8,1];
Init[qq1]=ReWC[8,2];
Init[qq3]=ReWC[8,3];
Init[lq1]=ReWC[8,4];
Init[lq3]=ReWC[8,5];
,
Init[ll]=ReWC[8,1]+I ImWC[8,1];
Init[qq1]=ReWC[8,2]+I ImWC[8,2];
Init[qq3]=ReWC[8,3]+I ImWC[8,3];
Init[lq1]=ReWC[8,4]+I ImWC[8,4];
Init[lq3]=ReWC[8,5]+I ImWC[8,5];
];

If[CPV==0,
Init[ee]=ReWC[9,1];
Init[uu]=ReWC[9,2];
Init[dd]=ReWC[9,3];
Init[eu]=ReWC[9,4];
Init[ed]=ReWC[9,5];
Init[ud1]=ReWC[9,6];
Init[ud8]=ReWC[9,7];
,
Init[ee]=ReWC[9,1]+I ImWC[9,1];
Init[uu]=ReWC[9,2]+I ImWC[9,2];
Init[dd]=ReWC[9,3]+I ImWC[9,3];
Init[eu]=ReWC[9,4]+I ImWC[9,4];
Init[ed]=ReWC[9,5]+I ImWC[9,5];
Init[ud1]=ReWC[9,6]+I ImWC[9,6];
Init[ud8]=ReWC[9,7]+I ImWC[9,7];
];

If[CPV==0,
Init[le]=ReWC[10,1];
Init[lu]=ReWC[10,2];
Init[ld]=ReWC[10,3];
Init[qe]=ReWC[10,4];
Init[qu1]=ReWC[10,5];
Init[qd1]=ReWC[10,6];
Init[qu8]=ReWC[10,7];
Init[qd8]=ReWC[10,8];
,
Init[le]=ReWC[10,1]+I ImWC[10,1];
Init[lu]=ReWC[10,2]+I ImWC[10,2];
Init[ld]=ReWC[10,3]+I ImWC[10,3];
Init[qe]=ReWC[10,4]+I ImWC[10,4];
Init[qu1]=ReWC[10,5]+I ImWC[10,5];
Init[qd1]=ReWC[10,6]+I ImWC[10,6];
Init[qu8]=ReWC[10,7]+I ImWC[10,7];
Init[qd8]=ReWC[10,8]+I ImWC[10,8];
];

If[CPV==0,
Init[ledq]=ReWC[11,1];
,
Init[ledq]=ReWC[11,1]+I ImWC[11,1];
];

If[CPV==0,
Init[quqd1]=ReWC[12,1];
Init[quqd8]=ReWC[12,2];
Init[lequ1]=ReWC[12,3];
Init[lequ3]=ReWC[12,4];
,
Init[quqd1]=ReWC[12,1]+I ImWC[12,1];
Init[quqd8]=ReWC[12,2]+I ImWC[12,2];
Init[lequ1]=ReWC[12,3]+I ImWC[12,3];
Init[lequ3]=ReWC[12,4]+I ImWC[12,4];
];

If[CPV==0,
Init[duql]=ReWC[13,1];
Init[qque]=ReWC[13,2];
Init[qqql]=ReWC[13,3];
Init[duue]=ReWC[13,4];
,
Init[duql]=ReWC[13,1]+I ImWC[13,1];
Init[qque]=ReWC[13,2]+I ImWC[13,2];
Init[qqql]=ReWC[13,3]+I ImWC[13,3];
Init[duue]=ReWC[13,4]+I ImWC[13,4];
];

If[CPV==0,
Init[ll\[CurlyPhi]\[CurlyPhi]]=ReWC[14,1];
,
Init[ll\[CurlyPhi]\[CurlyPhi]]=ReWC[14,1]+I ImWC[14,1];
];

CreateInputSubSMEFT;

];


CreateInputSubWET:=Block[{},

If[!inputcreated,
inputPre={BS2->Init[BS2X],BC1->Init[BC1X],BS1Hunprimed->Init[BS1HX][[1;;40]],BS1Hprimed->Init[BS1HX][[41;;80]],BS1GB->Init[BS1GBX],BS1SLunprimed->Init[BS1SLX][[1;;15]],BS1SLprimed->Init[BS1SLX][[16;;30]]};
input=Dispatch[inputPre];
inputcreated=True;
];

];


GenerateInputWET:=Block[{},

If[CPV==0,
Init[BS2X]=Table[ReWCWET[1,i],{i,1,8}];
Init[BC1X]=Table[ReWCWET[2,i],{i,1,15}];
Init[BS1HX]=Table[ReWCWET[3,i],{i,1,80}];
Init[BS1GBX]=Table[ReWCWET[4,i],{i,1,4}];
Init[BS1SLX]=Table[ReWCWET[5,i],{i,1,30}];
,
Init[BS2X]=Table[ReWCWET[1,i]+I ImWCWET[1,i],{i,1,8}];
Init[BC1X]=Table[ReWCWET[2,i]+I ImWCWET[2,i],{i,1,15}];
Init[BS1HX]=Table[ReWCWET[3,i]+I ImWCWET[3,i],{i,1,80}];
Init[BS1GBX]=Table[ReWCWET[4,i]+I ImWCWET[4,i],{i,1,4}];
Init[BS1SLX]=Table[ReWCWET[5,i]+I ImWCWET[5,i],{i,1,30}];
];

CreateInputSubWET;

];


ReadInputFiles[optionsFile_,WCsFile_,SMFile_]:=Block[{},

InitializeInput;

inputOptions=Import[optionsFile,"Table"];
inputSM=Import[SMFile,"Table"];

ReadOptionsFile;
ReadSMFile;

If[FileExtension[WCsFile]=="dat", (* WCs input in SLHA format *)

inputWCs=Import[WCsFile,"Table"];
WCsType="SMEFT";
MyPrint["Input : "<>WCsType<>" Wilson coefficients"];
ReadSMEFTWCsFile;
GenerateInputSMEFT;
,

If[FileExtension[WCsFile]=="json"||FileExtension[WCsFile]=="yaml"||FileExtension[WCsFile]=="yml",  (* WCs input in WCXF format *)

WCXFtoSLHA[WCsFile,"WCsInput-SMEFT.dat",HIGHSCALE];
ReadInputFiles[optionsFile,"WCsInput-SMEFT.dat",SMFile];

];
];

];


ReadInputFiles[optionsFile_,WCsFile_]:=Block[{},

InitializeInput;

inputOptions=Import[optionsFile,"Table"];
inputWCs=Import[WCsFile,"Table"];

ReadOptionsFile;

WCsType="WET";
MyPrint["Input : "<>WCsType<>" Wilson coefficients"];
ReadWETWCsFile;
GenerateInputWET;

];


ReadInputFiles[optionsFile_]:=Block[{},

InitializeInput;

inputOptions=Import[optionsFile,"Table"];

ReadOptionsFile;

];


WriteInputFileSLHA[SLHAFile_]:=Block[{},

Array35Zeros=Table[0,{i,1,35}];
dataOutput=Flatten[PrependTo[WCsNum,Array35Zeros]];
WriteWCsFile[SLHAFile,dataOutput];

];


WCXFtoSLHA[WCXFFile_,SLHAFile_,HIGHSCALEvalue_]:=Block[{format},

MyPrint["Translating WCXF to SLHA"];

If[FileExtension[WCXFFile]=="json",
format="JSON";
,
If[FileExtension[WCXFFile]=="yaml"||FileExtension[WCXFFile]=="yml",
format="YAML";
];
];

HIGHSCALE=HIGHSCALEvalue;
inputWCsWCXF=Import[WCXFFile,format];
wcxfdata=Join["values"/.inputWCsWCXF[[4]],Table[WCsWCXF[[i]]->0,{i,1,Length[WCsWCXF]}]];
ReadSMEFTWCsFileWCXF;
WriteInputFileSLHA[SLHAFile];

];


SLHAtoWCXF[SLHAFile_,WCXFFile_,CPVvalue_,LOWSCALEvalue_,HIGHSCALEvalue_]:=Block[{},

MyPrint["Translating SLHA to WCXF"];

InitializeInput;
CPV=CPVvalue;
LOWSCALE=LOWSCALEvalue;
HIGHSCALE=HIGHSCALEvalue;
inputWCs=Import[SLHAFile,"Table"];
WCsType="SMEFT";
ReadSMEFTWCsFile;
GenerateInputSMEFT;

dataOutput=Join[Chop[(Parameters[[1;;1664]]/.input)/HIGHSCALE^2,$MachineEpsilon],Chop[(Parameters[[1665;;1670]]/.input)/HIGHSCALE,$MachineEpsilon]];

(* Open file *)
outfile=OpenWrite[WCXFFile,FormatType->StandardForm];

If[FileExtension[WCXFFile]=="json",
WriteWCsJSON;
,
If[FileExtension[WCXFFile]=="yaml"||FileExtension[WCXFFile]=="yml",
WriteWCsYAML;
];
];

];


NewInput[param_,newvalue_,inputDispatch_]:=Block[{},
inputPre=inputPre/.{(param->(param/.inputDispatch))->(param->newvalue)};
inputDispatch=Dispatch[inputPre];
];
SetAttributes[NewInput,HoldAll];


NewScale[scale_,newvalue_]:=Block[{},
If[scale=="high",
HIGHSCALE=newvalue;
tHIGH=Log[10,newvalue]//N;
];
If[scale=="low",
LOWSCALE=newvalue;
tLOW=Log[10,newvalue]//N;
];
];


InitializeSMEFTrunnerInput:=Block[{},
inputSMEFTrunner=input;
inputSMEFTrunnerSM=SMInput;
];


InitializeEWmatcherInput:=Block[{},
inputEWmatcher[x_]:=If[SMEFTrunner,If[RGEsMethod==1,x/.insertt/.SubRedundant/.run/.t->tLOW,x/.SubRedundantNot/.run/.t->tLOW],x/.input];
];


InitializeWETrunnerInput:=Block[{},

If[EWmatcher, (* EWmatcher module already used *)

BS1unprimed=Join[BS1Hunprimed,BS1GB[[1;;2]],BS1SLunprimed];
BS1primed=Join[BS1Hprimed,BS1GB[[3;;4]],BS1SLprimed];

,  (* EWmatcher module not used *)

If[ValueQ[input], (* Input already generated *)

BS2=BS2/.input;
BC1=BC1/.input;
BS1Hunprimed=BS1Hunprimed/.input;
BS1Hprimed=BS1Hprimed/.input;
BS1GB=BS1GB/.input;
BS1SLunprimed=BS1SLunprimed/.input;
BS1SLprimed=BS1SLprimed/.input;

BS1unprimed=Join[BS1Hunprimed,BS1GB[[1;;2]],BS1SLunprimed];
BS1primed=Join[BS1Hprimed,BS1GB[[3;;4]],BS1SLprimed];

,

Print["Input for the WETrunner not initialized. Use InitializeWETrunnerInput when the input is defined."];

];
];

];
