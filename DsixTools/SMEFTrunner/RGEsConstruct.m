(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



If[
RGEsMethod==1, (* Method: NDSolve *)

subMatricesSMSM={
\[Beta]SM[MatrixListSM[[1,2]][m_,n_][t]]:>(\[Beta]SM[MatrixListSM[[1,3]]][[m,n]]/.insertt),
\[Beta]SM[MatrixListSM[[2,2]][m_,n_][t]]:>(\[Beta]SM[MatrixListSM[[2,3]]][[m,n]]/.insertt),
\[Beta]SM[MatrixListSM[[3,2]][m_,n_][t]]:>(\[Beta]SM[MatrixListSM[[3,3]]][[m,n]]/.insertt)};

subMatricesSM={
\[Beta][MatrixListSM[[1,2]][m_,n_][t]]:>(\[Beta][MatrixListSM[[1,3]]][[m,n]]/.insertt),
\[Beta][MatrixListSM[[2,2]][m_,n_][t]]:>(\[Beta][MatrixListSM[[2,3]]][[m,n]]/.insertt),
\[Beta][MatrixListSM[[3,2]][m_,n_][t]]:>(\[Beta][MatrixListSM[[3,3]]][[m,n]]/.insertt)};
subMatrices0F={
\[Beta][MatrixListWCs0F[[1,2]][t]]:>(\[Beta][MatrixListWCs0F[[1,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[2,2]][t]]:>(\[Beta][MatrixListWCs0F[[2,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[3,2]][t]]:>(\[Beta][MatrixListWCs0F[[3,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[4,2]][t]]:>(\[Beta][MatrixListWCs0F[[4,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[5,2]][t]]:>(\[Beta][MatrixListWCs0F[[5,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[6,2]][t]]:>(\[Beta][MatrixListWCs0F[[6,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[7,2]][t]]:>(\[Beta][MatrixListWCs0F[[7,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[8,2]][t]]:>(\[Beta][MatrixListWCs0F[[8,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[9,2]][t]]:>(\[Beta][MatrixListWCs0F[[9,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[10,2]][t]]:>(\[Beta][MatrixListWCs0F[[10,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[11,2]][t]]:>(\[Beta][MatrixListWCs0F[[11,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[12,2]][t]]:>(\[Beta][MatrixListWCs0F[[12,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[13,2]][t]]:>(\[Beta][MatrixListWCs0F[[13,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[14,2]][t]]:>(\[Beta][MatrixListWCs0F[[14,3]]]/.insertt),
\[Beta][MatrixListWCs0F[[15,2]][t]]:>(\[Beta][MatrixListWCs0F[[15,3]]]/.insertt)};
subMatrices2F={
\[Beta][MatrixListWCs2F[[1,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[1,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[2,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[2,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[3,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[3,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[4,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[4,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[5,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[5,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[6,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[6,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[7,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[7,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[8,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[8,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[9,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[9,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[10,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[10,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[11,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[11,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[12,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[12,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[13,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[13,3]]][[m,n]]/.insertt),
\[Beta][MatrixListWCs2F[[14,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[14,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[15,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[15,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[16,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[16,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[17,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[17,3]]][[m,n]]/.insertt),
\[Beta][MatrixListWCs2F[[18,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[18,3]]][[m,n]]/.insertt),\[Beta][MatrixListWCs2F[[19,2]][m_,n_][t]]:>(\[Beta][MatrixListWCs2F[[19,3]]][[m,n]]/.insertt)};
subMatrices4F={
\[Beta][MatrixListWCs4F[[1,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[1,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[2,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[2,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[3,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[3,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[4,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[4,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[5,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[5,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[6,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[6,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[7,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[7,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[8,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[8,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[9,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[9,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[10,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[10,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[11,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[11,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[12,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[12,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[13,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[13,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[14,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[14,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[15,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[15,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[16,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[16,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[17,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[17,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[18,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[18,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[19,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[19,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[20,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[20,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[21,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[21,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[22,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[22,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[23,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[23,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[24,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[24,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[25,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[25,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[26,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[26,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[27,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[27,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[28,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[28,3]]][[m,n,r,s]]/.insertt),
\[Beta][MatrixListWCs4F[[29,2]][m_,n_,r_,s_][t]]:>(\[Beta][MatrixListWCs4F[[29,3]]][[m,n,r,s]]/.insertt)};

subMatrices=Join[subMatricesSM,subMatrices0F,subMatrices2F,subMatrices4F];

RGEs=Table[
Derivative[1][Parameters[[i]]][t]==Log[10](\[Beta][Parameters[[i]]]/.insertt)/(16 Pi^2)/.subMatrices/.SubRedundant
,{i,1,Length[Parameters]}];

RGEsSM=Table[
Derivative[1][SMParam[[i]]][t]==Log[10](\[Beta]SM[SMParam[[i]]]/.insertt)/(16 Pi^2)/.subMatricesSMSM
,{i,1,Length[SMParam]}];

];


If[
RGEsMethod==2, (* Method: leading log *)

subMatricesNotSMSM={
\[Beta]SM[MatrixListSM[[1,2]][m_,n_]]:>\[Beta]SM[MatrixListSM[[1,3]]][[m,n]],
\[Beta]SM[MatrixListSM[[2,2]][m_,n_]]:>\[Beta]SM[MatrixListSM[[2,3]]][[m,n]],
\[Beta]SM[MatrixListSM[[3,2]][m_,n_]]:>\[Beta]SM[MatrixListSM[[3,3]]][[m,n]]};

subMatricesNotSM={
\[Beta][MatrixListSM[[1,2]][m_,n_]]:>\[Beta][MatrixListSM[[1,3]]][[m,n]],
\[Beta][MatrixListSM[[2,2]][m_,n_]]:>\[Beta][MatrixListSM[[2,3]]][[m,n]],
\[Beta][MatrixListSM[[3,2]][m_,n_]]:>\[Beta][MatrixListSM[[3,3]]][[m,n]]};
subMatricesNot0F={
\[Beta][MatrixListWCs0F[[1,2]]]:>\[Beta][MatrixListWCs0F[[1,3]]],\[Beta][MatrixListWCs0F[[2,2]]]:>\[Beta][MatrixListWCs0F[[2,3]]],\[Beta][MatrixListWCs0F[[3,2]]]:>\[Beta][MatrixListWCs0F[[3,3]]],\[Beta][MatrixListWCs0F[[4,2]]]:>\[Beta][MatrixListWCs0F[[4,3]]],\[Beta][MatrixListWCs0F[[5,2]]]:>\[Beta][MatrixListWCs0F[[5,3]]],\[Beta][MatrixListWCs0F[[6,2]]]:>\[Beta][MatrixListWCs0F[[6,3]]],\[Beta][MatrixListWCs0F[[7,2]]]:>\[Beta][MatrixListWCs0F[[7,3]]],\[Beta][MatrixListWCs0F[[8,2]]]:>\[Beta][MatrixListWCs0F[[8,3]]],\[Beta][MatrixListWCs0F[[9,2]]]:>\[Beta][MatrixListWCs0F[[9,3]]],\[Beta][MatrixListWCs0F[[10,2]]]:>\[Beta][MatrixListWCs0F[[10,3]]],\[Beta][MatrixListWCs0F[[11,2]]]:>\[Beta][MatrixListWCs0F[[11,3]]],\[Beta][MatrixListWCs0F[[12,2]]]:>\[Beta][MatrixListWCs0F[[12,3]]],\[Beta][MatrixListWCs0F[[13,2]]]:>\[Beta][MatrixListWCs0F[[13,3]]],\[Beta][MatrixListWCs0F[[14,2]]]:>\[Beta][MatrixListWCs0F[[14,3]]],\[Beta][MatrixListWCs0F[[15,2]]]:>\[Beta][MatrixListWCs0F[[15,3]]]};
subMatricesNot2F={
\[Beta][MatrixListWCs2F[[1,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[1,3]]][[m,n]],\[Beta][MatrixListWCs2F[[2,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[2,3]]][[m,n]],\[Beta][MatrixListWCs2F[[3,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[3,3]]][[m,n]],\[Beta][MatrixListWCs2F[[4,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[4,3]]][[m,n]],\[Beta][MatrixListWCs2F[[5,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[5,3]]][[m,n]],\[Beta][MatrixListWCs2F[[6,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[6,3]]][[m,n]],\[Beta][MatrixListWCs2F[[7,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[7,3]]][[m,n]],\[Beta][MatrixListWCs2F[[8,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[8,3]]][[m,n]],\[Beta][MatrixListWCs2F[[9,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[9,3]]][[m,n]],\[Beta][MatrixListWCs2F[[10,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[10,3]]][[m,n]],\[Beta][MatrixListWCs2F[[11,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[11,3]]][[m,n]],\[Beta][MatrixListWCs2F[[12,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[12,3]]][[m,n]],\[Beta][MatrixListWCs2F[[13,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[13,3]]][[m,n]],\[Beta][MatrixListWCs2F[[14,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[14,3]]][[m,n]],\[Beta][MatrixListWCs2F[[15,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[15,3]]][[m,n]],\[Beta][MatrixListWCs2F[[16,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[16,3]]][[m,n]],\[Beta][MatrixListWCs2F[[17,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[17,3]]][[m,n]],\[Beta][MatrixListWCs2F[[18,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[18,3]]][[m,n]],\[Beta][MatrixListWCs2F[[19,2]][m_,n_]]:>\[Beta][MatrixListWCs2F[[19,3]]][[m,n]]};
subMatricesNot4F={
\[Beta][MatrixListWCs4F[[1,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[1,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[2,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[2,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[3,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[3,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[4,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[4,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[5,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[5,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[6,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[6,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[7,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[7,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[8,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[8,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[9,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[9,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[10,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[10,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[11,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[11,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[12,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[12,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[13,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[13,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[14,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[14,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[15,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[15,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[16,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[16,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[17,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[17,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[18,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[18,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[19,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[19,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[20,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[20,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[21,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[21,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[22,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[22,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[23,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[23,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[24,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[24,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[25,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[25,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[26,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[26,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[27,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[27,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[28,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[28,3]]][[m,n,r,s]],
\[Beta][MatrixListWCs4F[[29,2]][m_,n_,r_,s_]]:>\[Beta][MatrixListWCs4F[[29,3]]][[m,n,r,s]]};

subMatricesNot=Join[subMatricesNotSM,subMatricesNot0F,subMatricesNot2F,subMatricesNot4F];

RGEs=Table[\[Beta][Parameters[[i]]]/.subMatricesNot,{i,1,Length[Parameters]}];

RGEsSM=Table[\[Beta]SM[SMParam[[i]]]/.subMatricesNotSMSM,{i,1,Length[SMParam]}];

];


(* We simplify the RGEs in case of CP-conservation *)

RGEs=RGEs/.iCPV->CPV;
RGEsSM=RGEsSM/.iCPV->CPV;


(* Export RGEs to external file *)

If[ExportRGEs==1,
If[CPV==0,
Export["RGEs/CPC/RGEsSaved-"<>ToString[RGEsMethod]<>".m",RGEs];
Export["RGEs/CPC/RGEsSMSaved-"<>ToString[RGEsMethod]<>".m",RGEsSM];
,
Export["RGEs/CPV/RGEsSaved-"<>ToString[RGEsMethod]<>".m",RGEs];
Export["RGEs/CPV/RGEsSMSaved-"<>ToString[RGEsMethod]<>".m",RGEsSM];
];
];
